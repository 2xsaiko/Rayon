package dev.lazurite.rayon.physics.helper;

import dev.lazurite.rayon.physics.util.Constants;

import javax.vecmath.Vector3f;
import java.util.Random;

/**
 * Methods related to air and air resistance.
 * @author Ethan Johnson
 */
public class AirHelper {
    /**
     * Simple math to calculate the amount of force generated by air resistance.
     * @return a {@link Vector3f} containing the direction and amount of force (in newtons)
     */
    public static Vector3f getResistanceForce(Vector3f velocity, float dragCoefficient) {
        // TODO Get size based on model shape in direction of movement (ask peyon)

        int size = 8;
        float k = (Constants.AIR_DENSITY * dragCoefficient * (float) Math.pow(size / 16f, 2)) / 2.0f;
        Vector3f force = new Vector3f();
        force.set(velocity);
        force.scale(k);
        force.scale(velocity.lengthSquared());
        force.scale(-1);
        return force;
    }

    public static Vector3f getRandomWindVector() {
        Random random = new Random();
        Vector3f out = new Vector3f();

        // TODO woosh

        return out;
    }
}
