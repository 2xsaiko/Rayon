import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
	id 'com.github.johnrengelman.shadow' version "5.2.0"
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

minecraft {
	accessWidener "src/main/resources/rayon.accesswidener"
}

subprojects {
	apply plugin: 'fabric-loom'
	archivesBaseName = rootProject.archives_base_name + "-" + project.name
	group = rootProject.maven_group + "." + rootProject.archives_base_name

	repositories {
		maven { url 'https://jitpack.io' }
	}

	dependencies {
		compile rootProject.sourceSets.main.output

		// Fabric API
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		// Additional, Helpful mods
		modImplementation "io.github.prospector:modmenu:1.14.6+build.31"
		modImplementation "com.github.joaoh1:OkZoomer:4.0.0-alpha.4.1.16.1"
	}
}

allprojects {
	apply plugin: 'com.github.johnrengelman.shadow'
	apply plugin: 'fabric-loom'

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	archivesBaseName = project.archives_base_name
	version = project.mod_version
	group = project.maven_group

	repositories {
		maven {
			name = "Ladysnake Libs"
			url = "https://dl.bintray.com/ladysnake/libs"
		}
	}

	dependencies {
		// Minecraft + Yarn
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

		// Fabric Loader + API
		modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		// Cardinal Components API
		modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
		modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"
		modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"
		include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
		include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}"
		include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"

		// JBullet
		implementation "cz.advel.jbullet:jbullet:${project.jbullet_version}"
		shadow "cz.advel.jbullet:jbullet:${project.jbullet_version}"
	}

	processResources {
		inputs.property "version", project.version

		from(sourceSets.main.resources.srcDirs) {
			include "fabric.mod.json"
			expand "version": project.version
		}

		from(sourceSets.main.resources.srcDirs) {
			exclude "fabric.mod.json"
		}
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	shadowJar {
		configurations = [project.configurations.shadow]
	}

	jar {
		from "LICENSE"
	}

	task relocateShadowJar(type: ConfigureShadowRelocation) {
		target = tasks.shadowJar
	}

	tasks.shadowJar.dependsOn tasks.relocateShadowJar

	remapJar {
		dependsOn shadowJar
		input.set shadowJar.archiveFile.get()
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifact(remapJar) {
					builtBy remapJar
				}
				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}

		repositories {
			mavenLocal()
		}
	}
}