plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

allprojects { project ->
	apply plugin: 'fabric-loom'
	apply plugin: 'maven-publish'
	apply plugin: 'java-library'

	sourceCompatibility = JavaVersion.VERSION_16
	targetCompatibility = JavaVersion.VERSION_16

	archivesBaseName = project.archives_base_name
	version = project.mod_version
	group = project.maven_group

	repositories {
		maven { url "https://maven.fabricmc.net/" }
	}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		implementation "com.github.stephengold:Libbulletjme:${project.libbulletjme_version}"
	}

	sourceSets {
		testmod {
			compileClasspath += main.compileClasspath
			runtimeClasspath += main.runtimeClasspath
		}
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"
		it.options.release = 16
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	java {
		withSourcesJar()
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.archivesBaseName}"}
		}
	}

	dependencies {
		testmodImplementation project.sourceSets.main.output
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifactId = 'transporter'

				pom {
					name = 'Rayon'
					description = 'A physics API for Minecraft.'
					url = 'https://github.com/LazuriteMC/Rayon'
					developers {
						developer {
							id = 'bluevista'
							name = 'BlueVista'
							email = 'ethan@ejohnsons.com'
						}
					}
				}

				versionMapping {
					usage('java-api') {
						fromResolutionOf('runtimeClasspath')
					}
					usage('java-runtime') {
						fromResolutionResult()
					}
				}

				artifact(remapJar) {
					builtBy remapJar
				}

				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}

		repositories {
			maven {
				url = 'https://lazurite.dev/maven/releases'
				credentials {
					username = project.property("publish.lazurite.alias")
					password = project.property("publish.lazurite.secret")
				}
			}
		}
	}
}

dependencies {
	include project(":rayon-core")
	include project(":rayon-entity")
	include project(":rayon-particle")
}

task publish(overwrite: true) {
	subprojects {
		publish
	}
}

task publishToMavenLocal(overwrite: true) {
	subprojects {
		publishToMavenLocal
	}
}